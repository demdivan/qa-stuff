1) Прочиать про клиент-серверную архитектуру.
Клиент серверная архитектура-вычислительная архитектура в которой клиент может отравить запрос на Сервер и получить ответ от Сервера.
Может быть одноуровневая, двухуровневая, многоуровневая.
одноуровневая - client - server.
двухуровневая - client - server - DB
многоуровневая - client - server - DB - Web service
Клиентом может быть: Server, web browser,Email,PC,mobile device
Сервером может быть: Железо, кокой-то серверные центр, то что может принимать запросы и отвечать на них
2) Что ткое HTTP и HTTPS
HTTP(Hyper Text Transfer Protocol)- протокол передачи гипертекста в формате HTML
HTTPS(Hyper Text Transfer Protocol Security)- протокол передачи данных на основе секъюрного протокола 
SSL(раньше) и TLS(сейчас)
3) HTTP методы
-Get (не имеет тела запроса,служит для получения информации с сервера, данные могут быть записаны в URL, (ограничен 2048 символами), кэшируется, безопасный и иденпотентный метод)
-Post (имеет тело запроса Body, служит для создания иформации на Сервер)
-Put
-Deleate
-Patch
-Head
-Options
4) HTTP статус коды сервера
100 - информационные
200 - успешные
300 - перенаправление
400 - ошибка со стороны клиенты
500 - Ошибка со стороны сервера
5) Что такое ядро браузера
Ядро - это программа или модуль, который отображает контент на основе языка разметки.
Ядро браузера можно разделить на две части:движок рендеринга и движок JS.
6) Какие браузеры какиие ядра используют
Trident(IEЯдро)
Gecko(Firefox/Mozilla)
Цebkit(Safari/Apple)
Chromium/Bink(Chrome)
Presto(Opera)
7) Что такое API
API (Interface Programm Interface) - интерфейс взаимодествия программ друг с другом
Клиент отправляет запрос на Сервер а API принимает (запросы) от Сервера
8. Что такое ендпоинты
То из чего состоит API и куда отправляем запрос. Точка касания API c Сервером
9) URL (URI, URL, URN)
URL (Uniform Resource Locator) - унифицированный указатель ресурса
URI (Uniform Resource Identifier) - унифицированный идентификатор ресурса
URN (Uniform Resource Name) - единообразное название ресурса
10) Идемпотентные HTTP методы
Методы при которых при повторном вызове которых дают тот же результат. Например Get, Deleate
11) Безопасные HTTP методы
Методы при которых клиент не вносит изменения в состояние Базы Данных. Например Get, Deleate
12) Иденфикация, Аутентификация, Авторизация
Идентификация - определение клиента в  базе, идентификация его по (email, login, Ф.И.О.)
Аутентификация - проверка того факта что это именно тот клиент который прошел идентификацию. (SMS, QR code, password, письмо на почту, звонок)
Авторизация - предоставление определнных прав, доступа.
13) Что такое IP
IP - уникальный интернет протокол кторый идентифицирует компьютер в сети
14) Что такое октаты в DNS
DNS- Domain Name System «система доменных имён» используется для получения информации о доменах
Основное предназначение DNS-серверов — хранение информации о доменах и ее предоставление по запросу пользователей, а также кэширование DNS-записей других серверов.
15) Что такое порт, сколько портов у Linux сервера
Порт - это числовой идентификатор программы или процесса, чтобы определить получателя.
Легкое объяснение:
IP адрес — это номер квартиры друга(роутер). Роутер имеет IP 95.84.208.79. 
Порт — это комната, в которой живёт друг 95.84.208.79:8245
HTPP port - 80 -  порт, с которого компьютер отправляет и получает сообщения
HTPPS port - 443
16) Уровни OSI
OSI - (Open Systems Interconnection model) открытая сетвая модель
Все, что происходит при отправке и приеме данных, детально описывает семиуровневая модель OSI.
Физический (Physical) - отвечает за обмен физическими сигналами между физическими устройствами, «железом»
Канальный уровень (Data Link) - решает проблему адресации при передаче информации.
Сетевой уровень (Network) - испоьзуется протокол определения адресов
Транспортный уровень (Transport) - транспортировка пакетов.
Сеансовый уровень (Session) - Сеансовый уровень отвечает за поддержку сеанса или сессии связи.
Уровень представления (Presentation) - представляет данные (которые все еще являются PDU) в понятном человеку и машине виде.
Уровень приложений (Application) - использовать свои протоколы, чтобы пользователь увидел данные в понятном ему виде.
17) Хедеры http запросов
-User Agent (ПО клиента)
-Cookie, cash
-Token
-Accept (lenguage)
-Host
-Method

